---
title: vault
layout: 'base.njk'
description: Vault
---

<h1>Vault</h1>

<div style="display: flex; align-items: center; gap: 80px;">
  <p>RE002</p>
  <p><a href="" style="color: white !important; text-decoration: underline; text-underline-offset: 4px;">Link</a></p>
  <form id="passwordForm" style="text-align: center;">
    <label for="password">Key:</label>
    <div style="display: inline-flex; vertical-align: middle;">
      <input
        type="text"
        id="password"
        name="password"
        required
        placeholder="XXXXX-XXXXXX-XXXXXXXX"
        style="margin-right: 0; padding-right: 6px; padding-left: 6px; border: none; background-color: white; color: black;width: 380px;"
      >
      <button
        type="submit"
        style="margin-left: 0; padding-left: 6px; border: none; background-color: #C2C2C2; color: black; cursor: pointer;"
      >
        Submit
      </button>
    </div>
    <div id="validationResult"></div>
  </form>
</div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const passwordForm = document.getElementById('passwordForm');
      const validationResult = document.getElementById('validationResult');

      passwordForm.addEventListener('submit', async (event) => {
        event.preventDefault();

        const password = document.getElementById('password').value;

        const response = await fetch('/.netlify/functions/validate', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
          },
          body: new URLSearchParams({ password }),
        });

        try {
          const data = await response.json();

          if (data.valid) {
            console.log('Password valid, redirecting');
            window.location.href = '/vault/re002';
          } else {
            validationResult.textContent = data.message;
            validationResult.style.color = 'white';
            console.log('Password invalid:', data.message);
          }
        } catch (error) {
          console.error('Error parsing JSON:', error);
          validationResult.textContent = 'An error occurred during validation.';
          validationResult.style.color = 'white';
        }
      });
    });
  </script>